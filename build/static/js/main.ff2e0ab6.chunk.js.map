{"version":3,"sources":["redux/reducers/rootReducer.ts","router/routes.tsx","router/routeElements.tsx","App.tsx","reportWebVitals.ts","components/DefaultTheme.tsx","redux/stores/store.ts","index.tsx"],"names":["ActionType","routes","title","path","LoadComponent","lazy","exact","routeElements","map","rest","App","useState","isLoaded","setIsLoaded","useEffect","setTimeout","className","src","alt","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultTheme","createMuiTheme","store","createStore","state","action","type","ConnectWalletAct","is_connect","payload","publicKey","adapter_type","ReactDOM","render","StrictMode","ThemeProvider","theme","document","getElementById"],"mappings":"4JAkBYA,E,qFCmBGC,EA3BU,CACvB,CACEC,MAAO,OACPC,KAAM,IACNC,cAAeC,gBAAK,kBAAM,8DAC1BC,OAAO,GAET,CACEJ,MAAO,UACPC,KAAM,WACNC,cAAeC,gBAAK,kBAAM,qEAC1BC,OAAO,I,0CCLIC,EAbO,kBAAMN,EAAOO,KAAI,YAKhC,IAJLJ,EAII,EAJJA,cACAD,EAGI,EAHJA,KAEGM,GACC,EAFJP,MAEI,kBACJ,OACE,cAAC,IAAD,yBAAkBC,KAAI,UAAKA,IAAYM,GAAvC,aACE,cAACL,EAAD,MADUD,OCwBDO,EA5BO,WACpB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,OALAC,qBAAU,WACRC,YAAW,WACTF,GAAY,KACX,OACF,IAED,qCACE,sBAAKG,UAAS,mDAA8CJ,EAAW,SAAW,SAAlF,UACE,qBAAKI,UAAU,oDACf,mBAAGA,UAAU,oGAAb,SAAiH,qBAAKC,IAAI,6BAA6BC,IAAI,iBAE7J,cAAC,WAAD,CAAUC,SAAU,aAApB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACGZ,IACD,cAAC,IAAD,UACE,mDCVCa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCLCQ,EAFMC,YAAe,I,gCLgBxB9B,O,wCAAAA,M,KAIL,IMfM+B,EAAQC,aNe6C,SAACC,EAAOC,GACtE,OAAIA,EAAOC,OAASnC,EAAWoC,iBACpB,2BAAIH,GAAX,IAAkBI,WAAYH,EAAOI,QAAQD,YAAc,KAG3DH,EAAOC,OAASnC,EAAWoC,iBACpB,2BAAIH,GAAX,IAAkBM,UAAWL,EAAOI,QAAQC,WAAa,KAGzDL,EAAOC,OAASnC,EAAWoC,iBACpB,2BAAIH,GAAX,IAAkBO,aAAcN,EAAOI,QAAQE,cAAgB,KACtDP,KOtBjBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAEA,cAACC,EAAA,EAAD,CAAeC,MAAOhB,EAAtB,SACI,cAAC,IAAD,CAAUE,MAASA,EAAnB,SACE,cAAC,EAAD,UAKNe,SAASC,eAAe,SAM1B3B,M","file":"static/js/main.ff2e0ab6.chunk.js","sourcesContent":["import {Action, Dispatch, Reducer} from \"redux\";\r\n\r\nexport interface InitialState {\r\n    is_connect: string, \r\n    publicKey: string,\r\n    adapter_type: string\r\n}\r\n\r\nexport const initialState: InitialState = {\r\n    is_connect: '', \r\n    publicKey: '',\r\n    adapter_type: ''\r\n};\r\n\r\nexport interface DispatchAction extends Action {\r\n    payload: Partial<InitialState>;\r\n}\r\n\r\nexport enum ActionType {\r\n    ConnectWalletAct\r\n}\r\n\r\nexport const rootReducer: Reducer<InitialState, DispatchAction> = (state, action) => {\r\n    if (action.type === ActionType.ConnectWalletAct) {\r\n        return {...state, is_connect: action.payload.is_connect || ''};\r\n    }\r\n\r\n    if (action.type === ActionType.ConnectWalletAct) {\r\n        return {...state, publicKey: action.payload.publicKey || ''};\r\n    }\r\n\r\n    if (action.type === ActionType.ConnectWalletAct) {\r\n        return {...state, adapter_type: action.payload.adapter_type || ''};\r\n    }else return state;\r\n};\r\n\r\n\r\nexport class RootDispatcher {\r\n    \r\n    private readonly dispatch: Dispatch<DispatchAction>;\r\n    \r\n    constructor(dispatch: Dispatch<DispatchAction>){\r\n        this.dispatch = dispatch; \r\n    }\r\n\r\n    updateConnectionStatus = (is_connect: string) => this.dispatch({type: ActionType.ConnectWalletAct, payload: {is_connect}});\r\n    updateConnectionPublicKey = (publicKey: string) => this.dispatch({type: ActionType.ConnectWalletAct, payload: {publicKey}});\r\n    updateConnectionAdapterType = (adapter_type: string) => this.dispatch({type: ActionType.ConnectWalletAct, payload: {adapter_type}});\r\n\r\n}\r\n","import { IS_CONNECT } from 'data/constants';\r\nimport { lazy } from 'react';\r\n\r\ntype Routes = {\r\n  title?: string,\r\n  LoadComponent: React.ComponentType,\r\n  exact: boolean,\r\n  path: string,\r\n}\r\n\r\nconst routes: Routes[] = [\r\n  {\r\n    title: 'Home',\r\n    path: '/',\r\n    LoadComponent: lazy(() => import('components/pages/home')),\r\n    exact: true,\r\n  },\r\n  {\r\n    title: 'Lottery',\r\n    path: '/lottery',\r\n    LoadComponent: lazy(() => import('components/pages/lottery')),\r\n    exact: true,\r\n  },\r\n  // {\r\n  //   title: 'Millipad',\r\n  //   path: '/millipad',\r\n  //   LoadComponent: lazy(() => import('components/pages/millipad')),\r\n  //   exact: true,\r\n  // },\r\n  // {\r\n  //   title: 'Millipad',\r\n  //   path: '/millipad/:nameProject',\r\n  //   LoadComponent: IS_CONNECT ? lazy(() => import('components/pages/millipad/connected')) : lazy(() => import('components/pages/millipad/unconnected')),\r\n  //   exact: true,\r\n  // },\r\n];\r\n\r\nexport default routes;\r\n","import { Route } from 'react-router-dom';\r\nimport routes from './routes';\r\n\r\nconst routeElements = () => routes.map(({\r\n  LoadComponent,\r\n  path,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route key={path} path={`${path}`} {...rest}>\r\n      <LoadComponent />\r\n    </Route>\r\n  );\r\n});\r\n\r\nexport default routeElements;\r\n","import React, { Suspense, useEffect, useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router, Switch, Route,\r\n} from 'react-router-dom';\r\nimport routeElements from './router/routeElements';\r\n\r\nconst App: React.FC = () => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoaded(true);\r\n    }, 750)\r\n  }, [])\r\n  return (\r\n    <>\r\n      <div className={`fixed h-100vh w-full top-0 left-0 z-1000 ${isLoaded ? 'hidden' : 'block'}`}>\r\n        <div className='h-full absolute w-full top-0 left-0 bg-gray-600'></div>\r\n        <p className='absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 max-h-full z-1000 max-w-110'><img src=\"/assets/common/loading.gif\" alt=\"loading\" /></p>\r\n      </div>\r\n      <Suspense fallback={() => {}}>\r\n        <Router>\r\n          <Switch>\r\n            {routeElements()}\r\n            <Route>\r\n              <div>404</div>\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </Suspense>\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nconst defaultTheme = createMuiTheme({});\r\n\r\nexport default defaultTheme;\r\n","import { createStore } from 'redux'\r\n//import connectWalletReducer from 'redux/reducers/connectWalletReducer'\r\nimport { InitialState,DispatchAction,rootReducer } from 'redux/reducers/rootReducer';\r\n\r\n// const store = createStore(connectWalletReducer)\r\n\r\n// export default store;\r\nexport const store = createStore<InitialState, DispatchAction, null, null>(rootReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './assets/css/styles.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport defaultTheme from './components/DefaultTheme';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from 'redux/stores/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\r\n  <ThemeProvider theme={defaultTheme}>\r\n      <Provider store = {store}>\r\n        <App />\r\n      </Provider>\r\n      \r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}